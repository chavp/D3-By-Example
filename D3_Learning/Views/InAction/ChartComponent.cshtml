@{
    ViewBag.Title = "ChartComponent";
}

<style>
    svg{
        background-color: lightgray;
    }
    line {
        shape-rendering: crispEdges;
        stroke: #000;
        }
    path.domain {
        fill: none;
        stroke: black;
    }

    .tick {
        opacity: 0.5;
    }
</style>
<h2>Chart Component</h2>
<svg></svg>
@section scripts{
    <script>
        $(function () {
            var margin = { top: 20, right: 60, bottom: 80, left: 60 },
                        width = 1000 - margin.left - margin.right,
                        height = 500 - margin.top - margin.bottom;

            var scatterData = [
                { friends: 5, salary: 22000 },
                { friends: 3, salary: 18000 },
                { friends: 10, salary: 88000 },
                { friends: 0, salary: 180000 },
                { friends: 27, salary: 56000 },
                { friends: 8, salary: 74000 }];

            var xExtent = d3.extent(scatterData, function (d) {
                return d.salary;
            });
            var yExtent = d3.extent(scatterData, function (d) {
                return d.friends;
            });

            console.log(xExtent);
            var xScale = d3.scale.linear().domain([15000, 200000]).range([0, width]);
            var yScale = d3.scale.linear().domain([0, 30]).range([height, 0]);

            var yAxis = d3.svg.axis().scale(yScale).orient("left").ticks(16).tickSize(-width);
            var xAxis = d3.svg.axis().scale(xScale).orient("bottom").tickSize(-height).ticks(5);

            var svg = d3.select("svg")
                .attr('width', width + margin.left + margin.right)
                        .attr('height', height + margin.top + margin.bottom)
                        .append("g")
                        .attr("transform", "translate(" + margin.left + "," + margin.right + ")");

            svg.selectAll("circle")
                .data(scatterData)
                .enter()
                .append("g")
                .attr("transform", function(d){
                    return "translate(" + xScale(d.salary) + "," + yScale(d.friends) + ")";
                })
                .append("circle")
                .attr("r", 5);

            svg.selectAll("g")
                .append('text').text(function (d) {
                    return "(" + d.salary + ", " + d.friends + ")";
                })
                .attr('x', -35)
                .attr('y', -10);

            svg.append("g").attr("id", "yAxisG").call(yAxis);
            svg.append("g").attr("id", "xAxisG").call(xAxis);

            //d3.selectAll("#yAxisG").attr("transform", "translate(0, 0)");
            d3.selectAll("#xAxisG").attr("transform", "translate(0," + height + ")");

            svg.selectAll("path.domain").style("fill", "none").style("stroke", "black");
            svg.selectAll("line").style("stroke", "black");
            
        });
    </script>
}